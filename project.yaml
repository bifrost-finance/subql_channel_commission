specVersion: 1.0.0
name: subql_behavioral_incentives
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: For Bifrost behavioral incentives project
repository: https://github.com/subquery/bifrost-subql-starter
schema:
  file: ./schema.graphql
network:
  endpoint: wss://bifrost-rpc.liebi.com/ws
  chainId: "0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"
  dictionary: https://api.subquery.network/sq/subquery/bifrost-parachain-dictionary
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Runtime
    startBlock: 3420650
    mapping:
      file: ./dist/index.js
      handlers:
      # Update current block
        - handler: handleBlock
          kind: substrate/BlockHandler
      # # ParachainStaking module handlers
      #   - handler: handleParachainStakingDelegation
      #     kind: substrate/EventHandler
      #     filter:
      #       module: parachainStaking
      #       method: Delegation
      #   - handler: handleParachainStakingDelegationIncreased
      #     kind: substrate/EventHandler
      #     filter:
      #       module: parachainStaking
      #       method: DelegationIncreased
      #   - handler: handleParachainStakingDelegationDecreased
      #     kind: substrate/EventHandler
      #     filter:
      #       module: parachainStaking
      #       method: DelegationDecreased
      #   - handler: handleParachainStakingDelegationRevoked
          # kind: substrate/EventHandler
          # filter:
          #   module: parachainStaking
          #   method: DelegationRevoked
      #VtokenMinting module handlers
        - handler: handleVtokenMintingMinted
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: Minted
        - handler: handleVtokenMintingRedeemed
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: Redeemed
      #Currencies module handlers
        - handler: handleVtokenTransferOut
          kind: substrate/EventHandler
          filter:
            module: tokens
            method: Transfer
      # # VstokenConversion module handlers
      #   - handler: handleVstokenConversionVsbondConvertToVsksm
      #     kind: substrate/EventHandler
      #     filter:
      #       module: vstokenConversion
      #       method: VsbondConvertToVsksm
      #   - handler: handleVstokenConversionVsksmConvertToVsbond
      #     kind: substrate/EventHandler
      #     filter:
      #       module: vstokenConversion
      #       method: VsksmConvertToVsbond
      # # Salp and Salp-lite modules handlers
      #   - handler: handleSalpContributed
      #     kind: substrate/EventHandler
      #     filter:
      #       module: salp
      #       method: Contributed
      #   - handler: handleSalpLiteIssued
      #     kind: substrate/EventHandler
      #     filter:
      #       module: salpLite
      #       method: Issued
      # # ZenlinkProtocol module handlers
      #   - handler: handleZenlinkProtocolLiquidityAdded
      #     kind: substrate/EventHandler
      #     filter:
      #       module: zenlinkProtocol
      #       method: LiquidityAdded
      #   - handler: handleZenlinkProtocolLiquidityRemoved
      #     kind: substrate/EventHandler
      #     filter:
      #       module: zenlinkProtocol
      #       method: LiquidityRemoved
      # # Buy KSM bond. Identified by Utility Batch call.
      #   - handler: handleSystemRemarkWithEvent
      #     kind: substrate/CallHandler
      #     filter:
      #       module: utility
      #       method: batchAll
      #       success: true